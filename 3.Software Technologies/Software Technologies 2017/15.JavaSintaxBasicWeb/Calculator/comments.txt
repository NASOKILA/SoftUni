
Java e mnogo tipiziran ezik, tam nqma var, toi e obektno orientiran ezik.
Podoben e na C# koda se kompilira, ne kato vus skriptovite ezici.

Shte pishem na Java v IntellyJ Idea.
TRQBVA DA INSTALIRAME JDK ozn JAVA DEVELOPMENT KIT I SUDURJA SOURSE KODA NA JAVA I JRE koeto e JAVA RUNTIME ENVIRONMENT I E VIRTUALNA MASHINA NA JAVA I TAM NIE IZPULNQVAME NASHIQ JAVA KOD.

JRE vurvi zaedno sus JDK.
Java koda vurvi na virtualna mashina bez znachenie na kakva operatina sistema si.

KOGATO SI GO INSTALIRAME TO OTIVA V C:/Programming Files/Java

SETUPVAME SI JDK V INTELLIJ

Kato dam dqsno kopche na sinqta papka src togava mi dava da si napravq nov Java klass inache ako dam dqsnoto na glavnata papka, ne mi dava !!!

OT Configure SDK kato kliknem na pluscheto si pravim novo JDK i posochvame papkata C:\Program Files\Java\jdk1.8.0_144  kudeto ni e JDK-a

Ot run/debug configurations klikvame na zelenoto plusche, Aplication, davame mu ime i klas noito da runva. SLED KOETO MOJEM DA SI PUSNEM PROGRAMATA I DA SI VIDIM REZULTATA NA KONZOLATA.

Pri instalirne po dobre ULTIMATE ot kolkoto COMMUNITY zashtoto nqma proekti SPRING    VAJNO !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


SINTAXIS:
Kakto v C# purvo se pishe tiput na promenlivite, posle ime i stinost !
Nakraq se slaga ;
Stringa e s GOLQMA BUKVA 
Konkatenaciqta se pravi s +

Placeholderite se pishat s % PRIMER:
  String s = "Pesho";
  System.out.printf("Zdravei %s", s); // TRQBVA DA E .printf() INACHE NQMA DA STANE


VAJNO !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! :
%s  E PLCE HOLDER ZA STRING
%f  ZA FLOATING POINT
%c  ZA CHAR
%d  ZA DIGIT

VAJNO !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! :
CHREZ psvm + TAB NI SUZDAVA AVTOMATICHNO 
public static void main(String[] args){} metoda !!!!!!!!!!!!!

sout + TAB   NI IZPIZVA System.out.println() MOJEM DA IZBIRAME DALI DA E println() ILI DRUGO.

Java e open source i vseki moje da vzeme source koda i da si go modificira kakto toi si iska.  


VAJNO !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! :
Vmesto za vseki fail da burkame v run/debug configuraciite E DOBRE PROSTO PURVIQT PUT DA RUNNEM TEKUSHTATA PROGRAMEA CHREZ DQSNO KOPCHE I RUN, POSLE VECHE STAVA SAMO SUS PLAY BUTONA !!!


VAJNO !!! :
V Java nqma decimal, Ima BigInteger, BigDecimal i dr
BigInteger e Cqlo chislo koeto e golqmo kolkoto ni subira pametta !
BigDecimal e DROBNO CHISLO koeto e golqmo kolkoto ni subira pametta 
    


SKENER:

    // Za da chetem ot konzolata trqbva da polzvame edno neshto narecheno Scanner
        // TRQBVA DA GO IMPORTNEM, AKO Scanner E S CHERVENO NAPISANO NATISKAME ALT + ENTER
        // I ni se otvarq prozorec ot kudeto da go importnem TRQBVA NI java.util I NI SE
        // POQVQVA OTGORE import java.util.Scanner
        // KAKTO V C# TRQBVA DA IMPORTVAME KLASOVE ZA DA IMAME DOSTUPI


        Scanner scanner = new Scanner(System.in);

        // V skobite mu kazvame OT KUDE DA CHETE, v sluchaq da chete ot standarniq
        // vhod, t.e. OT KONZOLATA !    NO MOJE I DA CHETE OT DRUGI MESTA !!!
        // SKENERA VAJI SAMO ZA METODA V KOITO E SUZDADEN, MOJEM DA GO KRUSTIM KAKTO SI ISKAME !

        // V Java Integer.parseInt() e ekvivalentno na int.Parse() v C# !!!!!
        //Double.parseDouble() E KATO double.Prse() !!!!
        //scanner.nextLine() e kato console.ReadLine() v C# !!!

        double firstNum = Double.parseDouble(scanner.nextLine());
        double secondNum = Double.parseDouble(scanner.nextLine());


        // S Place holdera mojem da formatirame kakto si poiskame
        //Trqbva da e .printf() za da raboti.

        System.out.printf("Sum = %.2f", sum);





VAJNO !!!! :
NQMA NACHIN DA PISHEM SAMO NA EDNA TEHNOLOGIQ, SHTE PISHEM NA MNOGO.
AKO SHVANEM NESHTATA V JAVA SHTE NI E PO LESNO V DRUGITE EZICI !!!




  // If statements:

        if(firstNum > secondNum)
        {
            System.out.printf("%f is grether than %f", firstNum, secondNum);
        }
        else
        {
            System.out.printf("%f is less than %f", firstNum, secondNum);
        }


        // i tuk go ima metoda .equals() no moje da polzvame i == kogato sravnqvame v if 




VAJNO!!!!!!!!!! :
// SHORTCUT ZA CIKLI E : iter ZA FOREACH    I ita ZA FOR

DEBUGVA SE SAMO KATO NATISNEM NA BUBOLECHKATA, NQMA NUJDA OT KONFIGURACIQ !
V Java nqma linq no ima STRIM API KOETO E PODOBNO !!!

NOV RED E System.lineSeparator(), V PLACE HOLDER E  %n NO TRQBVA DA SE NAMIRA DO NQKOI PLACEHOLDER !!!!!

Switch Case E SUSHTIQ SAMO DETO RABOTI NE RABOTI S FLOAT I DOUBLE, MOJE SAMO S 
char,byte, short, int, string i enum,

V JAVA NQMA ulong, uint I DRUGITE PODOBNI, MOJEM DA POLZVAME BigInteger I BigDecimal AKO NI TRQBVA NESHTO PO GOLQMO!




CIKLI:
// SHORTCUT ZA CIKLI E : iter ZA FOREACH    I ita ZA FOR
CIKLI: ABSOLUTNO EDNI I SUSHTI SA KATO V C#, SAMO FOREACH IMA MALKA RAZLIKA V SINTAKSISA.

PRIMER  FOREACH CIKUL:
for(int n : numsArr)
{
   System.out.Print(n);
}

i++, i--, i+= i dr. VSICHKI TEZI VAJAT !





MNOGO VAJNO !!!!!!!!!!!!!!!!!!!!!! :
SKENERA NE VIJDA ENTER KOGATO MU DAVAME CHISLA V KONZOLATA, MOJEM DA MU GI DADEM I NA SUSHTIQ RED !!!!!!!!!


METODI V JAVA:
SHTOM METODA MAIN E STATIC ZNACHI I DRUGITE METODI V NEGO TRQBVA DA SA STATIC, SHTE GO UCHIM PO OOP V SLEDVASHTIQ KURS.

Pri inicializiraneto pishem Integer vmesto int, Boolean vmesto bool  i t.n.

NE E DOBRA PRAKTIKA DA SE VZIMAT CHISLA OT KONZOLATA AKO NASHIQ METOD NE E OT TIP void !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!




OBEKTI I KLASOVE:

V C#, JAVA, JAVASCRIPT VSICHKO E OBEKT !!!!!!!!!!!!!!!!!!!!!!!!!!!!
Pri istinskite proekti v MAIN METODA SHTE IMA MNOGO MALKO KOD KOITO SAMO SUEDINQVA DADENI KLASOVE, V REALNATA RABOTA VSICHKO SE PRAVI S KLASOVE !!!!!!!

// S private nie pravim taka che tezi neshta da ne mogat da se vidqt otvun tozi clas !

VIJ ObjectsAndClassesExample FAILA !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


    // CHREZ Dqsno kopche, Generate mojem da si generirame avtomatichno konstrukturi, get i set metodi !



// S private nie pravim taka che tezi neshta da ne mogat da se vidqt otvun tozi clas !

    // V Java klasovete nqma properties kato v C# {get; set;} TUK TRQBVA DA SI PISHEM METODI !


// WE HAVE AN EMPTY CONSTRUCTOR
    public ObjectsAndClassesExample() {
    }

// WE HAVE A CONSTRUCTOR WITH EVERYTHING, kogato izvikvame new() relno izvikvame konstruktura
    //konstruktura suzdava instanciq ot obekt
    public ObjectsAndClassesExample(String name, double grade, int credits) {
        this.name = name;
        this.grade = grade;
        this.credits = credits;
    }



    private String name;

    // get metoda vrushta dadena stoinost

    public String getName()
    {
        return this.name;
    }

    // set metoda e OT TIP VOID, priema kato stoinost promenlivata koqto iskame da setnem !
    // I prosto q setvame, NE VRUSHTAME NISHTO

    public void setName(String name)
    {
        this.name = name;
    }



// SEGA MOJEM DA POLZVAME SUZDADENIQ KLAS: 
Student student = new Student().

OT student. MOJEM DA DOSTUPIM VSICHKO KOETO IMA KLASA

SUS student.setName('Ime') MOJEM DA MU SETNEM IMETO.

// MOJEM DA OTPECHAtame DANNitE NA STUDENTA
KAKTO V C# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Konstruktura e metod koito suzdava instanciq ot obekti

IMENATA NA METODITE V Java ZAPOCHVAT S MALKA BUKVA !!!! I SAMOTO IDE GO PRAVI!


VAJNO !!!!!!!!!!!!!!!!!!!!!!!!!!!!! : 
AKO NQMAME I PRAZEN KONSTRUKTOR TO PRI IZVIKVANETO NA KLASA SHTE ISKA DA SLOJIM PARAMETRITE V SKOVITE:  

Student student = new Student( ... );

A AKO IMAME PRAZEN KONSTRUKTOR SHTE MOJE DA SUZDADEM PRAZEN student I POSLE CHREZ SETERI DA SI DOBAVIM NESHTATA VUTRE:

Student student = new Student();
student.SetName("Atanas");
student SetGrade(5.50);
student.SetCredits(124);




// V JAVA SE PISHE POVECHE KOD NO SE VIJDA VSICHKO !!!!!!!



        //STRINOVE:
        /*POCHTI SUSHTITE SA.
                Ima malka razlika;
        */

        //Primer:
        String greet = "Hello";
        char ch = greet.charAt(0);
        System.out.println(ch);

        /*
        ZA DA VZEMEM NEKOI ELEMENT V JAVA TRQBVA DA POLZVAME METOD greet.charAt(index)
        DOKATO V C# Prosto pishem greet[index]

        V JAVA MOJEM DA KAJEM NA EDIN STRING CHE E null ZAHTOTO TUK STRINGA E OBEKT !
        */

        String a = null;

        /*
        VAJNO!!!!!!!!!!!!!!!!! :
        STRINGOVETE KAKTO V C# SA IMMUTABLE T.E. NE MOGAT DA SE PROMENQT, KATO KONKATENIRAME POLUCHAVAME NOV STRING !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        */


        // imame charAt(), contains, toLowerCase(), toUpperCase(), toCharArray() i dr.

        // .toString() SE POLZVA TAKA:
        int num = 5;
        String strNum = Integer.toString(num);
        System.out.println(strNum);

        // indexOf() i lastIndexOf() sa si sushtite
        String name = "Atanas";
        int firstIndex_a = name.indexOf('a');
        int lastIndex_a = name.lastIndexOf('a');

        System.out.println(firstIndex_a);
        System.out.println(lastIndex_a);

        // substring si e sushtiq

        String pieceOfName = name.substring(1,4);
        System.out.println(pieceOfName);


        // Ima .replace() I  replaceAll() koeto raboti sus REGEX:

        String naskoName = "Atjnjs Kjmbitov";
        String naskoNameRefactured = naskoName.replaceAll("j", "a");
        System.out.println(naskoNameRefactured);



        // StringBuildera E POCHTI SUSHTIQ, IMA APPEND

        StringBuilder sb = new StringBuilder();

        sb.append("Nasko, ");
        sb.append("Asi, ");
        sb.append("Toni");

        System.out.println(sb);


        //VAVNO!!!!!!!!!!!!!!!!!!!!! :
        // String.join() raboti samo sus stringove !!!!
        // NO AKO IMAME MASIV Ot INTOVE I ISKAME DA GI OPECHATAME MOJEM DA NAPRAVIM SLEDNOTO:

        int[] numsArr = {1,2,3,4};
        String numsArrInString = Arrays.toString(numsArr);
        System.out.println(numsArrInString);  // AVTOMATICHNO NI SLAGA ZAPETAI MEJDU TQH!
        // AKO ISMAE MOJME DA POLZVAME REPLACE ZA DA SI OFORMIM STRINGCHETO KAKTO SI ISKAME!

        numsArrInString = numsArrInString.replace("[", "");
        numsArrInString = numsArrInString.replace("]", "");
        // Zamenihme si '[' I ']' SUS Prazen string
        System.out.println(numsArrInString);

        // AKO PROSTO IMAME MASIV OT STRINGOVE:

        String[] names = {"Nasko", "Asi", "Toni"};
        System.out.println(String.join(" => ",names));





//KOLEKCII:

        // MASIVI : TE SA SI SUSHTTE TRQBV NI import java.util.Arrays;
        // List si e ist, set E List bez povtarqemost, map e rechnik
        // TIK MOJEM DA VZIMAME ELEMENTITE PO INDE KAKTO V C#

        String[] arr = {"Naso", "Goshkata", null};
        System.out.println(Arrays.toString(arr));
        System.out.println(arr.length);

        // System.out.println(arr[2].length());    // NE MOJEM DA VIKAME METODI NA OBEKTI OT TIP null
        // NO MOJEM DA IM SETNEM STOINOSTI:

        arr[2] = "Asen";
        System.out.println(arr[2].length());
        // MOJE I S CIKLI DA OBHOZDAME


        // VAJNO!!!:  PRI MASIVITE OSOBENOTO E CHE TRQBVA DA MINAVAME PREZ KLASA Arrays !!!!!!!!!!!!!!!!
        // V DRUGITE KOLEKCII NE E TAKA.



// SPISUCI:

TRQBVA NI import java.util.ArrayList;


        // SUZDAVA SE TAKA:  VINAGI TIPUT S GOLQMA BUKVA !!!!!!!
        ArrayList<String> namesList = new ArrayList<String>();

        // MOJEM DA DOBAVQME:
        namesList.add("Nasko");
        namesList.add("Asi");

        // MOJEM DA POLZVAME add KATO insertAt() V C#, t.e. NA DADEN INDEX NI SLAA DADENA STOINOST!
        namesList.add(1,"Toni");
        namesList.add(0,"Toshko");

        System.out.println(namesList); // Toshko, Nasko, Toni, Asi

        //MOJEM DA PREMAHVAME:
        namesList.remove(0); // CHREZ INDEX !!!!!
        namesList.remove("Toni"); // CHREZ IME NA ELEMENTA

        System.out.println(namesList); // Asi Toshko

        // SUZDAVAME SI NOV SPISUK KOITO DA DOBAVIM KUM PURVIQ:
        ArrayList<String> namesToAdd = new ArrayList<String>();
        namesToAdd.add("Miha");
        namesToAdd.add("Bobi");

        //addRange() tuk e addAll()
        namesList.addAll(namesToAdd);

        System.out.println(namesList); // Asi, TOshko, Miha, Bobi

        // VAJNO !!!!!!! :
        // toList() E asList() !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        // SPISUCITE SI IMAT FOREACH, SIZE, indexOf(), isEmpty() I MNOGO DRUGI !


        // Kak se izvikvat elementi :
        // V C# E TAKA namesList[1]; V JAVA SE POLZVA METODA .get()

        System.out.println(namesList.get(0)); // DAVA NI PURVIQT ELEMENT


        // .foreach()
        namesList.forEach(e -> System.out.print(e)); // POLZVA SE  ->  VMESTO  =>

        // MNOGO VAJNO !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!   :
        // AKO NESTO SVETI V JULTO ZNACHI MOJE DA BUDE SUKRATENO, DAVAME ALT + ENTER I VIJDAME KAK !!!
        namesList.forEach(System.out::print); // TAKA IZGLEJDA KATO GO REPLEISNEM !!!!!


        // MOJEM DA POLZVAME .forEach() FUNKCIQ:
        namesList.forEach(e -> {
            // MOJEM DA SI PISHEM TUK KAKVOTO SI ISKAME!!
            System.out.println("Hello, ");
            System.out.println(e);
        });




        // SETOVE:
        // NE POZVOLQVAT REPETICIQ !!!!!
        // IMA DVA VIDA: HashSet<>  I ThreeSet<>
        // RAZLIKATA E CHE ThreeSet<> DURJI ELEMENTITE SORTIRANI


        TreeSet<String> treeSet = new TreeSet<>();
        treeSet.add("Nasko");
        treeSet.add("Toshko");
        treeSet.add("Tato");
        treeSet.add("Tato");
        treeSet.add("Tato");
        treeSet.add("Baba");
        treeSet.add("Asi");
        treeSet.remove("Nasko");

        System.out.println(treeSet); // VSICHKO E SORTIRANO I NQMA POVTORENIQ


        //AKO E S HashSet SHTE SA PODREDENI PO DRUG NACHIN, SHTE SA RAZBIRKANI !
        HashSet<String> hashSet = new HashSet<>();
        hashSet.add("Nasko");
        hashSet.add("Toshko");
        hashSet.add("Tato");
        hashSet.add("Tato");
        hashSet.add("Tato");
        hashSet.add("Baba");
        hashSet.add("Asi");
        hashSet.remove("Nasko");

        System.out.println(hashSet); // POLUCHAVAME GI RAZBURKANI PO NEGOV SI NACHIN !



        // MAPOVE:
        // TOVA SA RECHNICI, V C# IMAME DICTIONARY I SortedDictionary
        //V Java imame HashMap<k,v>   i  TreeMap<k,v>

        HashMap<String, Integer> nameAge = new HashMap<>();
        nameAge.put("Nasko", 24);
        nameAge.put("Asi", 25);
        nameAge.put("Toni", 23);

        System.out.println(nameAge);
        // POLUCHAVAME {Toni=23, Asi=25, Nasko=24}, RAZDELENI SA SUS '=' I ','!
        // POLUHAVAME GI RAZBURKANI PO NEGOV SI NACHIN !

        // AKO BESHE SUS TreeMap :
        TreeMap<String, Integer> nameAgeTree = new TreeMap<>();
        nameAgeTree.put("Nasko", 24);
        nameAgeTree.put("Asi", 25);
        nameAgeTree.put("Toni", 23);

        System.out.println(nameAgeTree); // POLUCHAVAME GI SORTIRNI !!!




        // AKO IMAME SPISUK KATO VTORA STOINOST
        HashMap<String, ArrayList<Integer>> namePoints = new HashMap<>();

        // PURVO SI PRAVIM KLUCH( IME ) I STOINOST ( SPISUK )
        namePoints.put("Nasko", new ArrayList<>());

        //POSLE SI DOBAVQME STOINOSTITE KOITO ISKAME DA IMA V SPISUKA !
        // S get se vzima klucha !!!!!!!
        namePoints.get("Nasko").add(24);
        namePoints.get("Nasko").add(25);
        namePoints.get("Nasko").add(26);

        // VRUSHTA NI {Nasko=[24, 25, 26]}
        System.out.println(namePoints);



        // ITERIRANE NA Map PO KLUCHOVE, PO STOINOSTI, I PO DVETE:
        // SHTE RABOTIM S nameAgeTree :
        for (String key : nameAgeTree.keySet()) {
            System.out.println(key);
        }

        System.out.println("---------------------------");
        for (Integer value : nameAgeTree.values()) {
            System.out.println(value);
        }

        System.out.println("---------------------------");
        for (Map.Entry<String,Integer> kvp : nameAgeTree.entrySet()) {
            System.out.println(kvp);
        }
        System.out.println("---------------------------");

 