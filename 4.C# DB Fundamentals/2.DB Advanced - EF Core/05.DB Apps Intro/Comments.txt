	

Za kakvo shte govorim:
	01.Data Access Models.
	02.ADO.NET Architechture i kak da se svurzvame s baza
	03.Kak e pravi vruzka s SQL Server ot ADO.NET.
	04.SQL Injection SHTE PRAVIM NESHTA KOITO NE SA NI POZVOLENI.



01.Data Access Models
	Ima dva vida 'Connected' i 'Disconnected'
	'Connected' e model v koito se vruzvame s baza, i mojem da pravim vsichko v neq
	'Disconnected' e OFFLINE toi pravi promeni v bazata i posle Commitva 

	Pri 'Connected' e malko po tejuk !!!
	Tam vruzkata e 'Constantly Open' i imame postoqnna vruzka s bazata 
	Tam nasheto prilojenie e vinagi vurzano za bazata.
	
	Pri 'Disconnected' znaem vsichko e OFFLINE.
	Pozvame go kogato primerno bazata e mnogo daleche ili zavisi ot server koito 
	se vkluchva i izklucva postoqnno.

	Shte polzvame poveche 'Connected' !!!!!!!!!!!!!!!!!!!!
	Shte polzvame modela SqlClient
	

ADO.NET
	ADO.NET e biblioteka v .NET framework koqto ni pozvolqva vruzka s baza, pisane na 
	zaqvki, polzvane na LINQ za rabota s danni.

	Mojem da polzvame dataProviders, s tqh mojem da se vurjem i kum Oracle, 		PostGreSQL, SQLite i drugi vidove bazi, no se polzvanai mnogo MSSQL Server

	Pozvolqva ni da dostupvame elementi po ORM nachin, KOITO E PO LESEN I KACHESTVEN.
	
AZURE:
Tova se polzva za bazi i e CouldBased !!!


NET Core
	SHTE POLZVAME .NET Core koeto e po naprednalo ot .NET, napraveno e na modulqry
	Vurvi na vsqka Operacionna sistema.
	Vurvi pone 20 puti po burzo ot .NET Framework
	Po maluk e i e po podreden, mojem da polzvame samo tova koeto ni e nujno.
	Po burs e i po lek.


 	V .NET Core
             Tuk trqbva da si durpane paketi a tova e po leko zashtoto
             e po malko.
             
             


//VIDQHME MNOGO ZA 'Connected' modela

VAJNOOOOOOOOOOOOOOOOOOOOOOOOOO!!!!!!!!!!!!!!  :
Sega shte vidim za ORM modela:
	ORM - Object Relational Mapping
	Tova e FRAMEWORK koito stoi mejdu nas i nashata baza, tuk e za 	da ni pomogne. Raboti s OOP obekti i klasove.

	Tuk ne prashtame zaqvki kum bazata, daje ne gi i pishem, tuk se
	raboti direktno s obektite, MNOGO PO LESNO E KATO POLZVAME ORM.
	NAVSQKUDE SE POLZVA ORM MODELA. TAM RABOTIM S OBEKTITE OT BAZATA 
	MNOGO PO LESNO, 
	Obektite avtomatichno se promenqt i v bazata sled kato dadem 
	SaveChanges().
	Imame DBContext koito ni e za vruzka s bazata.
	VIDQHME GO TOVA V KURSA Software Technologies !
		
	S ORM pishem malko kod i vurshim poveche rabota, ne rabotim 
	realno s tablici a s obekti.
	Obache ORM ne e chak tolkova flexivno zashtoto polzvame 	avtonmatichno generirani zaqvki i e malko po bavno.
	S using()
	{
	  . . .
	}
	Rabotim s bazata i connectiona ni e avtomatichno otvarqn i 	zatvarqn.
	



KAK RABOTI .NET Core :
	Toi e ORM Framework napraven ot Microsoft za po lesno rabotene s
	MSSQL Server i s ostanalite providery za razlichni bazi.
	Raboti chrez LINQ sus dannite v bazata.





SqlClient Data Provider :
	Tova go virqhme predi:
	01.Pravim si vruzka sus Servera, tova stava sus connection string koito e mnogo grozen no moje da go razdelqme sus plusove.
	01.1s connection.Open() si otvarqme vruzkata.
MOJEM DA MU PODADEM I IMETO NA SERVERA ILI IP-to 
	01.2.Trqbva i da napishem do koq baza sme se svurzani.
	01.3 Pishem Integrated Security = True;
	02.Pravim si SQL komanda polzvaiki tazi vruzka, moje da 	
	priema i parametri, zapisvame v promenliva.
	03.Nachina po koito excecutvame zaqvkata imashe nqkolko nachina 	v zavisimost ot kakuv razultat vrushta zaqvkata.


Metodi za excecutvane na zaqvki:

	ExcecuteScalar() - Vrushta samo edna stoinost obache kato object t.e. trqbva da q kastvame

	ExcecuteReader() - Vrushta poredica ot stoinosti red po red
s Read() chetem sledvashtiq red i ako nqma vrushta false, polzvame go v while metod ! 	
	
	ExcecuteNonQuery() - Ne vrushta rezutat, kazva ni kolko reda sme promenili. Polzva se ako ne durpame nihto ot bazata a samo pravim neshto primerno pri polzvaneto na INSERT, DROP, CREATE, nie ne vzimame nishto ot bazata
 
	Vidqhme gi predi, ako polzvame greshen metod shte poluchim 
	InvalidCastException();


	



SQL INJECTION:
	Po princip parolite v saitovete sa keshirani ot keshirashta funkciq. I ako podadem edna i sushta parola na tazi funkciq shte ni vurna edno i sushto neshto. Taka samo usera si znae parolata.
KESHA NE MOJE DA SE OBURNE OBRATNO KUM PAROLATA.
Ako podadem dve paroli s malka razlika kum edna keshirashta funkciq,
KESHOVETE KOITO SHTE IZLEZNAT OT NEQ SHTE SA TOTALNO RAZLICHNI.

Na mqstoto na imeto koeto idva otvun kato parametur mojem da zatvorim
kavichkata  '   i da zakomentirame vsichko ostanalo, sled koeto se vrushtame tochno SLED kavichkata i mojem da si napishem zaqvi koito shte se izpulnqt. Izglejda taka:  

'; {NASHATA ZAQVKA ...} --Vssichko sled tova stava komentar 

SUS :   '; OR 1=1 --      MOJEM DA VLEZEM S KAKUVTO I DA E USERNAME

Kato zaqvka mojem da si insertnem user i da vlezem v saita :

Za da stane tova trqbva da keshirame parola sus dadena funkciq,
obache trqbva da vidim kak sa keshirani dosega parolite i da polzvame 
podoben algoritum. MOJE DA E MD2 | MD4 | MD5 | SHA | SHA1 | SHA2_256 | SHA2_512
FUNKCIQTA ZA AKESHIRANE SE NARICHA 'HASHBYTES'.

VSICHKO TOVA E VUZMOJNO SAMO AKO EDINICHNITE KAVICHKI NA SAMIQ SAIT NE
SA ESKEIPNATI PRI SUZDAVANETO MU !!!

select TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME FROM information_schema.TABLES
TAKA VIJDAME VSICHKO ZA TABLICITE SUSHTESTVUVASHTI V BAZATA, NO ZA DA
GI VIZUALIZITAME PONQKOGA TRQBVA DA JOINNEM

Za da se zashtitim ot SQL Injection trqbva ili da eskeipvame vseki sinvol ili da polzvame parametri koito da podavame na zaqvkite ili
polzvame AddWithValue() koeto e nai prostiq nachin da se zashtitim.























































