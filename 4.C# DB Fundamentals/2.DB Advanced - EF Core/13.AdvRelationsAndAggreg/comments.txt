
Shte govorim za:
	1.Oshte metodi za fluent API
	2.Grupirane na danni i Joinvane
	3.Attributi
	4.4ViewModeli	

Nqma da imame reacii dneska.
	.ToTable("NovoImeNaTablica") promenqme imeto na dadena talica.
	Moje da priema i vtori parametur
	
	.HasColumnName("ImeNaKolona") Promenqme imeto na kolonata
	.HasColumnType("TipNaKolona") Promenqme tiput na kolonata

	VAJNO !!!
		Za IDENTITY se polzva propertito
		.ValueGenerateOnAddOrUpdate()

	.Ignore() e ako NE iskame dadeno Property ot dadena tablica da e v bazata !


Ako iskame da iztriem Kaskadnoto triene polzvame:
	.OnDelete(DeleteBehviour.Restrict);



Configuracionni Klasove:
	Polzvahme gi v edna ot bazite.
	Samite vruzki, kluchove i propertira ot FLUENT API gi pishem v Otdelni klasove i 
	nakraq izvikvame samiq klas v metoda OnMetodCreating(){...}		
	Tezi klasove nasledqvat edin interfaise: 
		IEntityTypeConfiguration<ImeNaKlasa> { . . . }
	Davame CTRL + . I implementirame interfeisa sled koeto ni izliza edin metod
		public void Configure(... builder){ . . .}
	IZVIKVA SE TAKA:
		modelBuilder.ApplyConfiguration(new ImeNaClasa());




Filtrirane, Grupirane i Agregirane na danni:
	Po dobre e da polzvame Anonimni obekti sus .Select(e => new {...}); i da selektirame samo tova
	koeto ni trqbva ot bazata.
	Ot kolkoto .Include() i .ThenInclude() zashtoto natovarvame po malko bazata.
	OBACHE AKO ISKAME DA PROMENQME ILI TRIEM NESHTO TRQBVA DA POLZVAME .Include() i .ThenInclude()
	 	
.Include() i .ThenInclude() JOINVAME TABLICI.
	Mojem da joinvame i sus JOIN() Kato purvi parametu podavame tablicata koqto iskme da joinnem
	i kato vtori pishem kluchovete po koito da se joiinat.
	NE E PREPORACHITELNO DA POLZVAME JOIN ZASHTOTO E GROZNO I E MNOGO ZA PISANE !!!

AGGREGATE FUNKTIONS:
	Mojem da priagame agregirashti funkcii kum tablicite:
	
Grupirane:
	Grupirame s GroupBy();

Sortirane:
	Znaem kak se sortira, s OrderBy() i OrderByDescending() 


ViewModeli:
	V nego kazvame kakvo iskame da selektirame,
        Kakto v SQL SERVER. 
        I mojem da go polzvame vuv Select.
	Moje i da polzvame prosto metod koito da pravi sushtoto no s ViewModel e po formalno i 
	izglejda po dobre ot anonimniq obekt !!!
	MOJEM V TQH DA overridvame metoda ToString() I DIREKTNO DA SUBIRAME TOVA KOETO ISKAME
	DA PRINTIRAME, NO PAK TRQBVA DA POLZVAME FOREACH CIKUL CIKUL !!!!


VAJNO !!! :
	KOGATO SELEKTIRAME NESHTO OT BAZATA PO KAKUVTO I DAE NACHIN E DOBRE DA SLAGAME .ToArray() ILI
	.ToList() ZASHTOTO TAKA MARERIALIZIRAME I STAVA PO LESNO ZA PROGRAMATA !!!!!




ATTRIBUTI:
	Sedat nad propertitata.
	TRQBVAT NI: 	
		using System.ComponentModel.DataAnnotations;	//Za poletata i anotaciite
		using System.ComponentModel.DataAnnotations.Schema;   // Tova e za shemata
	NE SA TOLKOVA FLEKSIVNI, ZA POVECHE KONTROL NAD KONFIGURACIQTA NA TABLICITE V BAZATA 
	POLZVAME Fluent API		
	
	[Key] - Kazvame che propertito e Primary Key samoche ako imame Mapping tablica i se opitame da 	napravim dva
	takiva klucha ni kazva da polzvame Fluent API !

	[ForeignKey("ImeNaKolona")] - Kazvame che propertito e Foreign kluch.

	[Table("ImeNaTablica")] - Sedi nad klasa i kazvame kak e imeto na tablicata. 


	[Column("Name", Order = 2, TypeName = "NVARCHAR(50)")]  -  Mojem da kajem che propertito e
	 	kolona, davame mu ime, na koq poziciq e i ot kakuv tip e.

	[ColumnName("")]  -  Kazvame samo kakvo shte e imeto na kolonata
	
	[ColumnType("")]  -  Kazvame samo kakuv shte e tiput na kolonata

	VALIDACII:
		Mojem da slagame validacii chrez anotacii.
	[Required]  -  Ne moje kolonata da e NULL.

	[MinLength(5)]  -  Kazvame che propertito trqbva da ima minimalna duljina 5 sinvola.

        [MaxLength(20)]	 -  Kazvame che propertito moje da ima maksimalna duljina 20 sinvola.

	[StringLength(10)]  -  SUSHRTOTO E KATO [MinLength(10)]. 

	[Range(5, 10)]  -  Tova opredelq Min i Max sinvoli na dadeno property.

	[NotMapped]  -  Tova property e chast ot buisness logikata ne go vkarvai v bazata.

? Pred Tipa na kolonata:
	Primer:
		int? Number { get; set; }    // Kazvame che moje i da bude NULL
